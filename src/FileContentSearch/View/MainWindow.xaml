<Window x:Class="FileContentSearch.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converter="clr-namespace:FileContentSearch.View.Converter"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:FileContentSearch.ViewModel"
        Title="{Binding Title}"
        MinWidth="600"
        MinHeight="300"
        d:DataContext="{d:DesignInstance d:Type=viewModel:MainViewModel,
                                         IsDesignTimeCreatable=True}"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="FileContentSearch"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        Background="WhiteSmoke"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        FontFamily="Microsoft Sans Serif"
        ResizeMode="CanResizeWithGrip"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="Aliased"
        WindowStartupLocation="Manual"
        mc:Ignorable="d">

    <Window.Resources>
        <converter:IntPercentageToDoubleConverter x:Key="IntPercentageToDoubleConverter" />
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <Style x:Key="LabelTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="8,4,4,4" />
        </Style>

        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Height" Value="20" />
        </Style>

        <Style x:Key="SmallButtonBase" TargetType="Button">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Width" Value="23" />
        </Style>

        <Style x:Key="ClearButtonStyle"
               BasedOn="{StaticResource SmallButtonBase}"
               TargetType="Button">
            <Setter Property="Content" Value="X" />
        </Style>

        <Style x:Key="OpenButtonStyle"
               BasedOn="{StaticResource SmallButtonBase}"
               TargetType="Button">
            <Setter Property="Content" Value="&gt;" />
        </Style>

        <Style x:Key="NormalButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Width" Value="150" />
        </Style>

        <Style x:Key="NormalCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style x:Key="NormalDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal" ProgressValue="{Binding Mode=OneWay, Path=AppStateViewModel.Progress, UpdateSourceTrigger=PropertyChanged}" />
    </Window.TaskbarItemInfo>

    <!--<Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="TEST"
                         ProgressState="Normal"
                         ProgressValue="{Binding Mode=OneWay, Path=AppStateViewModel.Progress, UpdateSourceTrigger=PropertyChanged}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo Command="{Binding StartStopSearchCommand}"
                                     Description="{Binding AppStateViewModel.CommandText}"
                                     DismissWhenClicked="True"
                                     ImageSource="" />
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Row 0 - SearchFolder  -->
            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       Style="{StaticResource LabelTextBlockStyle}"
                       Text="{lex:Loc SearchFolder}" />
            <TextBox Grid.Row="0"
                     Grid.Column="1"
                     Grid.ColumnSpan="2"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.SearchPath, Mode=TwoWay}" />
            <Button Grid.Row="0"
                    Grid.Column="3"
                    Command="{Binding OpenCurrentDirectoryCommand}"
                    Style="{StaticResource OpenButtonStyle}" />
            <Button Grid.Row="0"
                    Grid.Column="4"
                    Click="OpenFolderBrowserDialog_Click"
                    Content="{lex:Loc Select}"
                    Style="{StaticResource NormalButtonStyle}" />

            <!--  Row 1 - SearchTerms  -->
            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Style="{StaticResource LabelTextBlockStyle}"
                       Text="{lex:Loc SearchTerms}" />
            <TextBox Grid.Row="1"
                     Grid.Column="1"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.SearchText1, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding StartStopSearchCommand}" />
                </TextBox.InputBindings>
            </TextBox>
            <TextBox Grid.Row="1"
                     Grid.Column="2"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.SearchText2, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding StartStopSearchCommand}" />
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Row="1"
                    Grid.Column="3"
                    HorizontalAlignment="Left"
                    Command="{Binding ClearSearchTextCommand}"
                    Style="{StaticResource ClearButtonStyle}" />

            <!--  Row 2 - Option CheckUpperLowerCase  -->
            <CheckBox Grid.Row="2"
                      Grid.Column="2"
                      Grid.ColumnSpan="2"
                      Content="{lex:Loc NoteUpperAndLowerCase}"
                      IsChecked="{Binding SearchSettings.CheckUpperLowerCase, Mode=TwoWay}"
                      Style="{StaticResource NormalCheckBoxStyle}" />

            <!--  Row 3 - Ordner ausschließen  -->
            <TextBlock Grid.Row="3"
                       Grid.Column="0"
                       Style="{StaticResource LabelTextBlockStyle}"
                       Text="{lex:Loc AllFolders}" />
            <ToggleButton Grid.Row="3"
                          Grid.Column="0"
                          Margin="8,4,4,4"
                          HorizontalAlignment="Stretch"
                          FontWeight="Bold"
                          IsChecked="{Binding SearchSettings.ExcludSubdirectoryNames, Mode=TwoWay}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Content" Value="{Binding Source={lex:Loc AllFolders}}" />
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="{Binding Source={lex:Loc ExcludeFolder}}" />
                                <Setter Property="Foreground" Value="OrangeRed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <TextBox Grid.Row="3"
                     Grid.Column="1"
                     IsEnabled="{Binding SearchSettings.ExcludSubdirectoryNames}"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.ExcludedSubdirectoryName1, Mode=TwoWay}" />
            <TextBox Grid.Row="3"
                     Grid.Column="2"
                     IsEnabled="{Binding SearchSettings.ExcludSubdirectoryNames}"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.ExcludedSubdirectoryName2, Mode=TwoWay}" />
            <Button Grid.Row="3"
                    Grid.Column="3"
                    HorizontalAlignment="Left"
                    Command="{Binding ClearExcludedSubdirectoryNamesCommand}"
                    Style="{StaticResource ClearButtonStyle}" />

            <!--  Row 4 - FileTypes  -->
            <ToggleButton Grid.Row="4"
                          Grid.Column="0"
                          Margin="8,4,4,4"
                          HorizontalAlignment="Stretch"
                          FontWeight="Bold"
                          IsChecked="{Binding SearchSettings.CheckAllFiles, Mode=TwoWay}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Content" Value="{Binding Source={lex:Loc FileTypes}}" />
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="{Binding Source={lex:Loc AllFileTypes}}" />
                                <Setter Property="Foreground" Value="OrangeRed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <TextBox Grid.Row="4"
                     Grid.Column="1"
                     IsEnabled="{Binding SearchSettings.CheckAllFiles, Converter={StaticResource InverseBooleanConverter}}"
                     Style="{StaticResource InputTextBoxStyle}"
                     Text="{Binding SearchSettings.FileExtensions, Mode=TwoWay}" />

            <!--  Row 4-5 - Start / Stop  -->
            <Button Grid.Row="4"
                    Grid.RowSpan="2"
                    Grid.Column="4"
                    Command="{Binding StartStopSearchCommand}"
                    Content="{Binding AppStateViewModel.CommandText}"
                    FontWeight="Bold"
                    Foreground="{Binding AppStateViewModel.CommandTextColor}"
                    Style="{StaticResource NormalButtonStyle}" />

            <!--  Row 5 - Results  -->
            <TextBlock Grid.Row="5"
                       Grid.Column="0"
                       Style="{StaticResource LabelTextBlockStyle}"
                       Text="{lex:Loc Results}" />

            <Button Grid.Row="5"
                    Grid.Column="1"
                    Margin="4"
                    Command="{Binding CopyResultFilelistToClipboardCommand}"
                    Content="{lex:Loc CopyToClipboard}" />

        </Grid>

        <DataGrid Grid.Row="1"
                  Margin="4"
                  AutoGenerateColumns="False"
                  CellStyle="{StaticResource NormalDataGridCellStyle}"
                  IsReadOnly="True"
                  ItemsSource="{Binding ResultsCollectionView}"
                  SelectedItem="{Binding SelectedResult}"
                  SelectionMode="Single">
            <DataGrid.InputBindings>
                <MouseBinding Command="{Binding OpenSelectedResultCommand}" Gesture="LeftDoubleClick" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="Auto"
                                        CanUserSort="True"
                                        Header="{lex:Loc File}"
                                        SortMemberPath="Result.FileName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Padding="4"
                                    HorizontalContentAlignment="Left"
                                    Command="{Binding OpenResultCommand}"
                                    Content="{Binding Result.FileName}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="Auto"
                                    Binding="{Binding Result.ResultFilePath}"
                                    CanUserSort="True"
                                    Header="{lex:Loc Path}"
                                    SortMemberPath="Result.ResultFilePath" />
                <DataGridTextColumn Width="Auto"
                                    Binding="{Binding Result.LastWriteTime, StringFormat='{}{0:dd.MM.yyyy - HH:mm:ss}'}"
                                    CanUserSort="True"
                                    Header="{lex:Loc Modified}"
                                    SortMemberPath="Result.LastWriteTime" />
                <DataGridTextColumn Width="Auto"
                                    Binding="{Binding Result.CreationTime, StringFormat='{}{0:dd.MM.yyyy - HH:mm:ss}'}"
                                    CanUserSort="True"
                                    Header="{lex:Loc Created}"
                                    SortMemberPath="Result.CreationTime" />
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <ProgressBar Width="200"
                             Height="16"
                             Maximum="1"
                             Minimum="0"
                             Value="{Binding AppStateViewModel.Progress, Mode=OneWay}" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="1">
                <TextBlock Margin="8,0,0,0" Text="{Binding AppStateViewModel.FileCountStatus}" />
            </StatusBarItem>

        </StatusBar>
    </Grid>

</Window>
